flask:
import os
basdir=os.path.abspath(os.path.dirname(__file__))
app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI']='sqlite:///'+os.path.join(basdir+'data.sqlite')
app.config['SQLALCHEMY_COMMIT_ON_TEARDOWN'] = True
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
app.config['SECRET_KEY']='123456'
db=SQLAlchemy(app)
manage=Manager(app)
migrate=Migrate(app,db)
manage.add_command('db',MigrateCommand)
python test.py db init 创建迁移仓库
python test.py db migrate -m "inition migrate"  添加迁移脚本
python test.py db upgrade   更新数据
第一次使用：
    初始化：(venv)  python manage.py db init 这个命令会在项目下创建 migrations 文件夹，所有迁移脚本都存放其中。
    创建第一个版本：(venv) $ python manage.py db migrate -m "initial migration"  检查migrations\versions，会新建一个版本.py，检查里面表格及字段
    运行升级 (venv) $ python manage.py db upgrade，会把项目使用的数据库文件，更新为新的表格、字段，同时保留数据
后缀更新：
    更新表格的字段 (models.py)
    再次运行一下 db migrate -m -> 相当于commit 更新到/migrate目录
    db upgrade -> 数据库会更新
最常用的SQLAlchemy列类型

类型名	Python类型	说 明
Integer	int	普通整数,一般是 32 位
SmallInteger	int	取值范围小的整数,一般是 16 位
BigInteger	int 或 long	不限制精度的整数
Float	float	浮点数
Numeric	decimal.Decimal	定点数
String	str	变长字符串
Text	str	变长字符串,对较长或不限长度的字符串做了优化
Unicode	unicode	变长 Unicode 字符串
UnicodeText	unicode	变长 Unicode 字符串,对较长或不限长度的字符串做了优化
Boolean	bool	布尔值
Date	datetime.date	日期
Time	datetime.time	时间
DateTime	datetime.datetime	日期和时间
Interval	datetime.timedelta	时间间隔
Enum	str	一组字符串
PickleType	任何 Python 对象	自动使用 Pickle 序列化
LargeBinary	str	二进制文件
最常使用的SQLAlchemy列选项
选项名	说 明
primary_key	如果设为 True ,这列就是表的主键
unique	如果设为 True ,这列不允许出现重复的值
index	如果设为 True ,为这列创建索引,提升查询效率
nullable	如果设为 True ,这列允许使用空值;如果设为 False ,这列不允许使用空值
default	为这列定义默认值
常用的SQLAlchemy关系选项
选项名	说 明
backref	在关系的另一个模型中添加反向引用
primaryjoin	明确指定两个模型之间使用的联结条件。只在模棱两可的关系中需要指定
lazy	指定如何加载相关记录。可选值有 select (首次访问时按需加载)、 immediate (源对象加载后就加载)、 joined (加载记录,但使用联结)、 subquery (立即加载,但使用子查询),noload (永不加载)和 dynamic (不加载记录,但提供加载记录的查询)
uselist	如果设为 Fales ,不使用列表,而使用标量值
order_by	指定关系中记录的排序方式
secondary	指定 多对多 关系中关系表的名字
secondaryjoin	SQLAlchemy 无法自行决定时,指定多对多关系中的二级联结条件
